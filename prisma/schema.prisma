generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("APPIAV2_PRISMA_DATABASE_URL")
}

model User {
  id           String        @id @default(cuid())
  email        String        @unique
  name         String?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  projects     Project[]
  savedPrompts SavedPrompt[]

  @@map("users")
}

model Project {
  id          String   @id @default(cuid())
  name        String
  description String?
  language    String   @default("react")
  prompt      String
  code        String?
  files       Json?
  isPublic    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("projects")
}

model SavedPrompt {
  id        String   @id @default(cuid())
  prompt    String
  language  String   @default("react")
  createdAt DateTime @default(now())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("saved_prompts")
}

model Usage {
  id         String   @id @default(cuid())
  userId     String
  actionType String
  tokensUsed Int      @default(0)
  createdAt  DateTime @default(now())
  metadata   Json?

  @@index([userId, createdAt])
  @@map("usage")
}

model Subscription {
  id                   String   @id @default(cuid())
  userId               String   @unique
  tier                 String   @default("free")
  tokensLimit          Int      @default(10000)
  tokensUsed           Int      @default(0)
  resetDate            DateTime
  stripeCustomerId     String?
  stripeSubscriptionId String?
  status               String   @default("active")
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt

  @@map("subscriptions")
}
